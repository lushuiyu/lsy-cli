#! /usr/bin/env node
const { program } = require('commander');
const chalk = require("chalk");
// const ProjectCreator = require("../lib/projectCreator");
const { useCreateProject } = require("../modules/create-project");

// 注入环境变量
const dotenv = require("dotenv");
dotenv.config();
// 自定义命令
// 设置版本号
program.name("lsy-cli").usage("<command> [options]").version(`lsy-cli ${require("../package.json").version}`);

useCreateProject();
// program
//   .command("create <project-name>") // 增加创建指令
//   .description("创建新项目") // 添加描述信息
//   .option("-f, --force", "强制覆盖") // 强制覆盖
//   .action((projectName, cmd) => {
//     // projectName ->项目名称, cmd->命令行参数 {force: true}
//     // // 处理用户输入create 指令附加的参数
//     if (cmd?.force) console.log(chalk.yellow("强制覆盖已开启"));
//     // 创建项目
//     const project = new ProjectCreator(projectName, cmd);
//     project.create();
//   });

// 监听 --help 指令
program.on("--help", function () {
  // 前后两个空行调整格式，更舒适
  console.log();
  console.log(`输入 ${chalk.cyan("lsy-cli <command> --help")} 获取命令的详细使用说明。`);
  console.log();
});



program.parse(process.argv);


// 定义一个loading
// const spinner = ora("Loading unicorns");
// // 启动loading
// // spinner.start();
// setTimeout(() => {
//   spinner.color = "yellow";
//   spinner.text = "Loading rainbows";
// }, 1000);

// 选项
// new Inquirer.prompt([
//   {
//     name: "vue",
//     // 多选交互功能
//     // 单选将这里修改为 list 即可
//     type: "checkbox",
//     message: "Check the features needed for your project:",
//     choices: [
//       {
//         name: "Babel",
//         checked: true,
//       },
//       {
//         name: "TypeScript",
//       },
//       {
//         name: "Progressive Web App (PWA) Support",
//       },
//       {
//         name: "Router",
//       },
//     ],
//   },
// ]).then((data) => {
//   console.log(data);
//   spinner.succeed();
// });



// console.log('Hello, world!');
// console.log(`hello ${chalk.blue("world")}`);
// console.log(chalk.blue.bgRed.bold("Hello world!"));
// console.log(
//   chalk.green(
//     "I am a green line " +
//       chalk.blue.underline("with a blue substring") +
//       " that becomes green again!"
//   )
// );



// loading 成功
// spinner.succeed();
// // loading 失败
// spinner.fail();